---
name: CI/CD Pipeline

"on":
  push:
    branches: [main, master]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  CI: true
  REACT_APP_ENV: test
  NODE_ENV: test

concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./gdi-dapp
        run: npm ci

      - name: Run linting
        working-directory: ./gdi-dapp
        run: npx eslint 'src/**/*.{js,jsx,ts,tsx}' --quiet

      - name: Run tests
        working-directory: ./gdi-dapp
        run: CI=true npm test -- --watchAll=false --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: gdi-dapp/coverage/lcov.info

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./gdi-dapp
        run: npm ci

      - name: Build application
        working-directory: ./gdi-dapp
        run: npm run build
